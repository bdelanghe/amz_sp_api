=begin
#Orders v0

#Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).

OpenAPI spec version: v0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.63
=end

# Common files
require 'orders-api-model_V0/api_client'
require 'orders-api-model_V0/api_error'
require 'orders-api-model_V0/version'
require 'orders-api-model_V0/configuration'

# Models
require 'orders-api-model_V0/models/address'
require 'orders-api-model_V0/models/address_extended_fields'
require 'orders-api-model_V0/models/amazon_programs'
require 'orders-api-model_V0/models/associated_item'
require 'orders-api-model_V0/models/association_type'
require 'orders-api-model_V0/models/automated_shipping_settings'
require 'orders-api-model_V0/models/business_hours'
require 'orders-api-model_V0/models/buyer_customized_info_detail'
require 'orders-api-model_V0/models/buyer_info'
require 'orders-api-model_V0/models/buyer_requested_cancel'
require 'orders-api-model_V0/models/buyer_tax_info'
require 'orders-api-model_V0/models/buyer_tax_information'
require 'orders-api-model_V0/models/confirm_shipment_error_response'
require 'orders-api-model_V0/models/confirm_shipment_order_item'
require 'orders-api-model_V0/models/confirm_shipment_order_items_list'
require 'orders-api-model_V0/models/confirm_shipment_request'
require 'orders-api-model_V0/models/constraint_type'
require 'orders-api-model_V0/models/delivery_preferences'
require 'orders-api-model_V0/models/easy_ship_shipment_status'
require 'orders-api-model_V0/models/electronic_invoice_status'
require 'orders-api-model_V0/models/error'
require 'orders-api-model_V0/models/error_list'
require 'orders-api-model_V0/models/exception_dates'
require 'orders-api-model_V0/models/fulfillment_instruction'
require 'orders-api-model_V0/models/get_order_address_response'
require 'orders-api-model_V0/models/get_order_buyer_info_response'
require 'orders-api-model_V0/models/get_order_items_buyer_info_response'
require 'orders-api-model_V0/models/get_order_items_response'
require 'orders-api-model_V0/models/get_order_regulated_info_response'
require 'orders-api-model_V0/models/get_order_response'
require 'orders-api-model_V0/models/get_orders_response'
require 'orders-api-model_V0/models/item_buyer_info'
require 'orders-api-model_V0/models/marketplace_id'
require 'orders-api-model_V0/models/marketplace_tax_info'
require 'orders-api-model_V0/models/measurement'
require 'orders-api-model_V0/models/money'
require 'orders-api-model_V0/models/open_interval'
require 'orders-api-model_V0/models/open_time_interval'
require 'orders-api-model_V0/models/order'
require 'orders-api-model_V0/models/order_address'
require 'orders-api-model_V0/models/order_buyer_info'
require 'orders-api-model_V0/models/order_item'
require 'orders-api-model_V0/models/order_item_buyer_info'
require 'orders-api-model_V0/models/order_item_buyer_info_list'
require 'orders-api-model_V0/models/order_item_list'
require 'orders-api-model_V0/models/order_items'
require 'orders-api-model_V0/models/order_items_buyer_info_list'
require 'orders-api-model_V0/models/order_items_inner'
require 'orders-api-model_V0/models/order_items_list'
require 'orders-api-model_V0/models/order_list'
require 'orders-api-model_V0/models/order_regulated_info'
require 'orders-api-model_V0/models/orders_list'
require 'orders-api-model_V0/models/other_delivery_attributes'
require 'orders-api-model_V0/models/package_detail'
require 'orders-api-model_V0/models/package_reference_id'
require 'orders-api-model_V0/models/payment_execution_detail_item'
require 'orders-api-model_V0/models/payment_execution_detail_item_list'
require 'orders-api-model_V0/models/payment_method_detail_item_list'
require 'orders-api-model_V0/models/points_granted_detail'
require 'orders-api-model_V0/models/preferred_delivery_time'
require 'orders-api-model_V0/models/prescription_detail'
require 'orders-api-model_V0/models/product_info_detail'
require 'orders-api-model_V0/models/promotion_id_list'
require 'orders-api-model_V0/models/regulated_information'
require 'orders-api-model_V0/models/regulated_information_field'
require 'orders-api-model_V0/models/regulated_order_verification_status'
require 'orders-api-model_V0/models/rejection_reason'
require 'orders-api-model_V0/models/shipment_status'
require 'orders-api-model_V0/models/shipping_constraints'
require 'orders-api-model_V0/models/substitution_option'
require 'orders-api-model_V0/models/substitution_option_list'
require 'orders-api-model_V0/models/substitution_preferences'
require 'orders-api-model_V0/models/tax_classification'
require 'orders-api-model_V0/models/tax_collection'
require 'orders-api-model_V0/models/transparency_code'
require 'orders-api-model_V0/models/transparency_code_list'
require 'orders-api-model_V0/models/update_shipment_status_error_response'
require 'orders-api-model_V0/models/update_shipment_status_request'
require 'orders-api-model_V0/models/update_verification_status_error_response'
require 'orders-api-model_V0/models/update_verification_status_request'
require 'orders-api-model_V0/models/update_verification_status_request_body'
require 'orders-api-model_V0/models/valid_verification_detail'
require 'orders-api-model_V0/models/verification_details'
require 'orders-api-model_V0/models/verification_status'

# APIs
require 'orders-api-model_V0/api/orders_api'

module AmzSpApi::OrdersApiModelV0
  class << self
    # Customize default settings for the SDK using block.
    #   AmzSpApi::OrdersApiModelV0.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
